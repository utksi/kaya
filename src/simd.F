#include "simd.inc"

MODULE SIMD
      TYPE, PUBLIC :: SIMD_REAL64
      REAL*8 :: X(0 : SIMD_WIDTH_64BIT - 1)
      END TYPE SIMD_REAL64

      TYPE, PUBLIC :: SIMD_MASK_REAL64
      LOGICAL :: X(0 : SIMD_WIDTH_64BIT - 1)
      END TYPE SIMD_MASK_REAL64

      TYPE, PUBLIC :: SIMD_INT64
      INTEGER*8 :: X(0 : SIMD_WIDTH_64BIT - 1)
      END TYPE SIMD_INT64

#ifdef GNU_SIMD_EXPERIMENTAL
#undef SIMD_EXP
#undef SIMD_LOG
#undef SIMD_POW
      INTERFACE
         FUNCTION SIMD_EXP(X) BIND(C, NAME="__exp_finite")
!$OMP DECLARE SIMD (SIMD_EXP)
         USE ISO_C_BINDING
         IMPLICIT NONE
         REAL(C_DOUBLE) :: SIMD_EXP
         REAL(C_DOUBLE), VALUE, INTENT(IN) :: X
         END FUNCTION SIMD_EXP

         FUNCTION SIMD_LOG(X) BIND(C, NAME="__log_finite")
!$OMP DECLARE SIMD (SIMD_LOG)
         USE ISO_C_BINDING
         IMPLICIT NONE
         REAL(C_DOUBLE) :: SIMD_LOG
         REAL(C_DOUBLE), VALUE, INTENT(IN) :: X
         END FUNCTION SIMD_LOG

         FUNCTION SIMD_POW(X_1, X_2) BIND(C, NAME="__pow_finite")
!$OMP DECLARE SIMD (SIMD_POW)
         USE ISO_C_BINDING
         IMPLICIT NONE
         REAL(C_DOUBLE) :: SIMD_POW
         REAL(C_DOUBLE), VALUE, INTENT(IN) :: X_1, X_2
         END FUNCTION SIMD_POW
      END INTERFACE
#endif
END MODULE SIMD
