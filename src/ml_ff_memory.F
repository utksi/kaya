#if defined(MPI) || defined(MPI_CHAIN)
#include "symbol.inc"
!****************************************************************************************************
! Module for estimation of possibly used memory and for calculation of
! actually used memory.
! The estimated results are stored in variables declared in TYPE
! MEMORY0.
! The calculated results are stored in variables declared in TYPE
! MEMORY1.
! For either case, the definitions of the variables are listed below.
! 1 : memory used for coulomb interaction force field variables that are statically saved
! 2 : memory used for many-body interaction force field variables that are statically saved
! 3 : memory used for ab-initio data that are statically saved
! 4 : memory used for new ab-initio data that are statically saved
! 5 : memory used for store temporary variables necessary for sparsification
! 6 : memory used for store temporary variables necessary for calculations of Coulomb descriptors
! 7 : memory used for store temporary variables necessary for calculations of many-body descriptors
! 8 : memory used for store temporary variables necessary for Coulomb regression
! 9: memory used for store temporary variables necessary for many-body regression
! 10: memory used for store temporary variables necessary for Coulomb prediction
! 11: memory used for store temporary variables necessary for many-body prediction
!****************************************************************************************************

      MODULE MEMORY_USAGE
        USE ML_FF_CONSTANT
        USE LOGFILE
        USE MPI_DATA
        USE ML_FF_PREC
        USE TIME_CHECK

          CONTAINS

!****************************************************************************************************
! Subroutine for estimating the necessary amount of memory at the begining of the calculation
!****************************************************************************************************

          SUBROUTINE ESTIMATE_MEMORY (FF,FFM,TIM,PAR_SUP_HANDLE,MEM0,MEM1,LOGF,A_NEW,B_NEW,IBROAD1_FFM,IBROAD2_FFM,ISTART_FF, &
                     LCOUPLE_FFM, LMAX1_FFM,LMAX2_FFM,LMLMB_FF,LMLONLY_FF,LSIC_FFM,LSUPERVEC_FFM, &
                     MB_FFM,MCONF_FF,MCONF_NEW_FF,MIONS_FF,MITYP_FF,MSPL1_FFM,MSPL2_FFM,MTYP_FF, &
                     NHYP1_FFM,NHYP2_FFM,NIONS_NEW,NITYP_NEW,NR1_FFM,NR2_FFM,MRB1_FFM,MRB2_FFM,NSW,NTYP_NEW, &
                     OMEGA_NEW,RCUT1_FFM,RCUT2_FFM,W1_FFM,W2_FFM)
            USE ML_FF_CONSTANT
            USE LOGFILE
            USE TIME_CHECK
            USE ML_FF_STRUCT, ONLY : FF_PAR, FFM_PAR, TIME, PARALLEL_SUPER, MEMORY, LOG_PAR
            IMPLICIT NONE
! Input variables
            TYPE (FF_PAR)         :: FF
            TYPE (FFM_PAR)        :: FFM
            TYPE (TIME)           :: TIM
            TYPE (PARALLEL_SUPER) :: PAR_SUP_HANDLE
            TYPE (MEMORY)         :: MEM0
            TYPE (MEMORY)         :: MEM1
            TYPE (LOG_PAR)        :: LOGF
            REAL(q), INTENT(IN)   :: A_NEW(:,:) !(1:3,1:3) ! Primitive lattice vectors in current VASP calculation.
            REAL(q), INTENT(IN)   :: B_NEW(:,:) !(1:3,1:3) ! Reciprocal lattice vectors in current VASP calculation.
            INTEGER, INTENT(IN)   :: IBROAD1_FFM ! Broadening parameter.
            INTEGER, INTENT(IN)   :: IBROAD2_FFM ! Broadening parameter.
            INTEGER, INTENT(IN)   :: ISTART_FF ! Type of restart.
            LOGICAL, INTENT(IN)   :: LCOUPLE_FFM ! Controls whether coupling parameter for free energy calculations is used or not
            INTEGER, INTENT(IN)   :: LMAX1_FFM ! Maximum angular momentum number of spherical harmonics used to expand the atomic distributions.
            INTEGER, INTENT(IN)   :: LMAX2_FFM ! Maximum angular momentum number of spherical harmonics used to expand the atomic distributions.
            LOGICAL, INTENT(IN)   :: LMLMB_FF ! Variable that determines whether the calculations of pairwise.
                                          ! interactions will be executed or not.
            LOGICAL, INTENT(IN)   :: LMLONLY_FF ! Variable that specifies whether the training will be done or not.
                                               ! will be executed or not.
            LOGICAL, INTENT(IN)   :: LSIC_FFM ! Variable specifies whether the self-interaction correction is executed or not.
            LOGICAL, INTENT(IN)   :: LSUPERVEC_FFM ! Variable specifies whether the super vector is used for calculating similarity measure or not.
            INTEGER, INTENT(IN)   :: MB_FFM ! Maximum  number of basis sets used for describing many-body interactions.
            INTEGER, INTENT(IN)   :: MCONF_FF ! Maximum number of configurations used as training data.
            INTEGER, INTENT(IN)   :: MCONF_NEW_FF ! Maximum number of new configurations stored as candidates of training data temporally.
            INTEGER, INTENT(IN)   :: MIONS_FF ! The maximum number of atoms in current VASP calculation and previous ab initio data.
            INTEGER, INTENT(IN)   :: MITYP_FF ! The maximum number of atoms per element in current VASP calculation.
                                              ! and previous ab initio data.
            INTEGER, INTENT(IN)   :: MSPL1_FFM ! The number of radial grids used in spline-interpolations.
            INTEGER, INTENT(IN)   :: MSPL2_FFM ! The number of radial grids used in spline-interpolations.
            INTEGER, INTENT(IN)   :: MTYP_FF ! The maximum number of elements in current VASP calculation and previous ab initio data.
            INTEGER, INTENT(IN)   :: NHYP1_FFM ! Polynomial parameter in SOAP 1-point kernel.
            INTEGER, INTENT(IN)   :: NHYP2_FFM ! Polynomial parameter in SOAP 2-point kernel.
            INTEGER, INTENT(IN)   :: NIONS_NEW ! The number of atoms in current VASP calculation.
            INTEGER, INTENT(IN)   :: NITYP_NEW(:) !(1:NTYP_NEW) ! The number of atoms per element type.
            INTEGER, INTENT(IN)   :: NR1_FFM ! The number of radial grids used for the radial integrations in computations of descriptors of many-body interactions.
            INTEGER, INTENT(IN)   :: NR2_FFM ! The number of radial grids used for the radial integrations in computations of descriptors of many-body interactions.
            INTEGER, INTENT(IN)   :: MRB1_FFM ! The number of radial basis sets used for describing many-body interactions
            INTEGER, INTENT(IN)   :: MRB2_FFM ! The number of radial basis sets used for describing many-body interactions
            INTEGER, INTENT(IN)   :: NSW ! The maximum number of MD step.
            INTEGER, INTENT(IN)   :: NTYP_NEW ! The number of element type in current VASP calculation.
            REAL(q), INTENT(IN)   :: OMEGA_NEW  ! System volume in current VASP calculation
            REAL(q), INTENT(IN)   :: RCUT1_FFM ! Cutoff function used to calculate descriptors of many-body interactions.
            REAL(q), INTENT(IN)   :: RCUT2_FFM ! Cutoff function used to calculate descriptors of many-body interactions.
            REAL(q), INTENT(IN)   :: W1_FFM ! Weight for 1-point correlation kernel.
            REAL(q), INTENT(IN)   :: W2_FFM ! Weight for 2-points correlation kernel.
! Temporary variables used for estimating the memory usage.
            REAL(q)               :: CPUTIM0,CPUTIM1 ! Variables necessary to measure the times.
            REAL(q)               :: GABS ! Norm of reciprocal lattice vectors.
            REAL(q), ALLOCATABLE  :: GXYZ(:,:) ! Reciprocal lattice vectors used in Ewald summation.
            REAL(q)               :: GXYZ_TMP(1:3) ! Temporary reciprocal lattice vectors.
            INTEGER               :: INTYP
            INTEGER               :: IXYZ ! A variable specifying X, Y or Z.
            INTEGER               :: LFLAG ! A flag to determine the reciprocal lattice vectors used in the Ewald summation.
            INTEGER               :: M ! A temporary integer variable.
            INTEGER               :: MB_NEW_FFM ! The maximum number of basis sets in new configurations
            INTEGER               :: MBTOT_FFM ! The maximum number of basis sets for many-body interactions
            INTEGER               :: MDATA_FFM ! The maximum number of training data for many-body interactions
            INTEGER               :: MDATA_NEW_FFM ! The maximum number of new training data for many-body interactions
            INTEGER               :: MITYP_NEW ! The maximum number of atoms per element type.
            INTEGER               :: MNEIB_EST1 ! The maximum number of atoms per element within the cutoff radius used for calculating many-body interactions.
            INTEGER               :: MNEIB_EST2 ! The maximum number of atoms per element within the cutoff radius used for calculating many-body interactions.
            INTEGER               :: MNEIB_EWST ! The maximum number of atoms within the cutoff radius used for Ewald summation.
            INTEGER               :: MNEIB_QST ! The maximum number of atoms within the cutoff radius used in charge fitting.
            INTEGER               :: MMVAR1_FFM ! NRB*MTYP used for 1-point descriptor
            INTEGER               :: MMVAR2_FFM ! NRB*NRB*(LMAX+1)*MTYP(^2) used for 2-point descriptor
            INTEGER               :: MVAR_CLM1 ! Size of row dimension of CLM1
            INTEGER               :: MVAR_CLM2 ! Size of row dimension of CLM2
            INTEGER               :: N,NG ! Integer variables necessary for reading INCAR file.
            REAL(q)               :: PREFAC ! Temporary real variable used for determining the reciprocal lattice vectors used in Ewald summation.
            REAL(q)               :: R1
            REAL(q)               :: R2
            REAL(q)               :: RMEM_TMP
            REAL(q)               :: VPUTIM0,VPUTIM1 ! Variables necessary to measure the times.
! Start profiling
            PROFILING_START('estimate_memory')
! Measure the initial time
            CALL VTIME (VPUTIM0,CPUTIM0)
! Initialization of variables
            MEM1%RMEM=0.0_q
            MEM1%RMEM_CMAT=0.0_q
            MEM1%RMEM_CMAT_ALL=0.0_q
            MEM1%RMEM_PS=0.0_q
            MEM1%RMEM_PS_ALL=0.0_q
            MEM1%RMEM_RST=0.0_q
            MEM1%RMEM_SOAP=0.0_q
            MEM1%RMEM_SOAP_ALL=0.0_q
            MEM1%RMEM_SVD =0.0_q
            MEM1%RMEM_WMAT_ALL=0.0_q
! Calculate the maximum number of atom per element
            MITYP_NEW=NITYP_NEW(1)
            DO INTYP=2, NTYP_NEW
               MITYP_NEW=MAX(MITYP_NEW,NITYP_NEW(INTYP))
            ENDDO

            MNEIB_QST =0
            MNEIB_EWST=0
            NG        =0
! Sizes of arrays necessary for calculating many-body interactions
            IF(LMLMB_FF) THEN
! Size of the basis set
               MBTOT_FFM=MB_FFM*MTYP_FF
               MB_NEW_FFM=MITYP_FF*MCONF_NEW_FF
! Sizes of training data
               MDATA_FFM    =(3*MIONS_FF+7)*MCONF_FF
               MDATA_NEW_FFM=(3*MIONS_FF+7)*MCONF_NEW_FF
! Sizes of row dimensions of descriptor arrays (PS and C00)
               MMVAR1_FFM=MRB1_FFM*MTYP_FF
               MMVAR2_FFM=MRB2_FFM*(MRB2_FFM+1)/2*(LMAX2_FFM+1)*MTYP_FF**2
! Size of row dimension of the expansion-coefficients (CLM1 and CLM2)
               MVAR_CLM1=MTYP_FF*MRB1_FFM
               MVAR_CLM2=(LMAX2_FFM+1)**2*MTYP_FF*MRB2_FFM
! Estimate the number of atoms within the cutoff radius
               MNEIB_EST1=INT(4.0_q/3.0_q*PI*(RCUT1_FFM/AUTOA)**3/(OMEGA_NEW/AUTOA**3)*MITYP_NEW)
               MNEIB_EST2=INT(4.0_q/3.0_q*PI*(RCUT2_FFM/AUTOA)**3/(OMEGA_NEW/AUTOA**3)*MITYP_NEW)
            ENDIF
! Set size of local arrays used in scaLAPACK
            IF(LMLMB_FF) THEN
#ifdef scaLAPACK
               PAR_SUP_HANDLE%DESC_BE_ENERGY%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_BE_ENERGY%N=1
               PAR_SUP_HANDLE%DESC_BE_ENERGY%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_BE_ENERGY%NB=1
               PAR_SUP_HANDLE%DESC_BE_ENERGY%IRSRC=0
               PAR_SUP_HANDLE%DESC_BE_ENERGY%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_BE_ENERGY%DESC,PAR_SUP_HANDLE%DESC_BE_ENERGY%M,PAR_SUP_HANDLE%DESC_BE_ENERGY%N, &
                    PAR_SUP_HANDLE%DESC_BE_ENERGY%MB,PAR_SUP_HANDLE%DESC_BE_ENERGY%NB,PAR_SUP_HANDLE%DESC_BE_ENERGY%IRSRC,PAR_SUP_HANDLE%DESC_BE_ENERGY%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_BE_ENERGY%LLD, &
                    PAR_SUP_HANDLE%DESC_BE_ENERGY%LOC_M,PAR_SUP_HANDLE%DESC_BE_ENERGY%LOC_N)
               PAR_SUP_HANDLE%DESC_BE_FORCE%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_BE_FORCE%N=3*MIONS_FF
               PAR_SUP_HANDLE%DESC_BE_FORCE%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_BE_FORCE%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_BE_FORCE%IRSRC=0
               PAR_SUP_HANDLE%DESC_BE_FORCE%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_BE_FORCE%DESC,PAR_SUP_HANDLE%DESC_BE_FORCE%M,PAR_SUP_HANDLE%DESC_BE_FORCE%N, &
                    PAR_SUP_HANDLE%DESC_BE_FORCE%MB,PAR_SUP_HANDLE%DESC_BE_FORCE%NB,PAR_SUP_HANDLE%DESC_BE_FORCE%IRSRC,PAR_SUP_HANDLE%DESC_BE_FORCE%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_BE_FORCE%LLD, &
                    PAR_SUP_HANDLE%DESC_BE_FORCE%LOC_M,PAR_SUP_HANDLE%DESC_BE_FORCE%LOC_N)
               PAR_SUP_HANDLE%DESC_BE_STRESS%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_BE_STRESS%N=6
               PAR_SUP_HANDLE%DESC_BE_STRESS%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_BE_STRESS%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_BE_STRESS%IRSRC=0
               PAR_SUP_HANDLE%DESC_BE_STRESS%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_BE_STRESS%DESC,PAR_SUP_HANDLE%DESC_BE_STRESS%M,PAR_SUP_HANDLE%DESC_BE_STRESS%N, &
                    PAR_SUP_HANDLE%DESC_BE_STRESS%MB,PAR_SUP_HANDLE%DESC_BE_STRESS%NB,PAR_SUP_HANDLE%DESC_BE_STRESS%IRSRC,PAR_SUP_HANDLE%DESC_BE_STRESS%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_BE_STRESS%LLD, &
                    PAR_SUP_HANDLE%DESC_BE_STRESS%LOC_M,PAR_SUP_HANDLE%DESC_BE_STRESS%LOC_N)
               PAR_SUP_HANDLE%DESC_C00%M=MMVAR1_FFM
               PAR_SUP_HANDLE%DESC_C00%N=MITYP_FF
               PAR_SUP_HANDLE%DESC_C00%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00%IRSRC=0
               PAR_SUP_HANDLE%DESC_C00%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_C00%DESC,PAR_SUP_HANDLE%DESC_C00%M,PAR_SUP_HANDLE%DESC_C00%N, &
                    PAR_SUP_HANDLE%DESC_C00%MB,PAR_SUP_HANDLE%DESC_C00%NB,PAR_SUP_HANDLE%DESC_C00%IRSRC,PAR_SUP_HANDLE%DESC_C00%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_C00%LLD, &
                    PAR_SUP_HANDLE%DESC_C00%LOC_M,PAR_SUP_HANDLE%DESC_C00%LOC_N)
               PAR_SUP_HANDLE%DESC_C00_FFM%M=MMVAR1_FFM
               PAR_SUP_HANDLE%DESC_C00_FFM%N=MB_FFM
               PAR_SUP_HANDLE%DESC_C00_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_C00_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_C00_FFM%DESC,PAR_SUP_HANDLE%DESC_C00_FFM%M,PAR_SUP_HANDLE%DESC_C00_FFM%N, &
                    PAR_SUP_HANDLE%DESC_C00_FFM%MB,PAR_SUP_HANDLE%DESC_C00_FFM%NB,PAR_SUP_HANDLE%DESC_C00_FFM%IRSRC,PAR_SUP_HANDLE%DESC_C00_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_C00_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_C00_FFM%LOC_M,PAR_SUP_HANDLE%DESC_C00_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%M=MMVAR1_FFM
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%N=MITYP_FF
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_C00_NEW_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_C00_NEW_FFM%DESC,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%M,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%N, &
                    PAR_SUP_HANDLE%DESC_C00_NEW_FFM%MB,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%NB,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%IRSRC,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_C00_NEW_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_C00_NEW_FFM%LOC_M,PAR_SUP_HANDLE%DESC_C00_NEW_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_CMAT%M=MB_FFM
               PAR_SUP_HANDLE%DESC_CMAT%N=MB_FFM
               PAR_SUP_HANDLE%DESC_CMAT%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_CMAT%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_CMAT%IRSRC=0
               PAR_SUP_HANDLE%DESC_CMAT%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_CMAT%DESC,PAR_SUP_HANDLE%DESC_CMAT%M,PAR_SUP_HANDLE%DESC_CMAT%N, &
                    PAR_SUP_HANDLE%DESC_CMAT%MB,PAR_SUP_HANDLE%DESC_CMAT%NB,PAR_SUP_HANDLE%DESC_CMAT%IRSRC,PAR_SUP_HANDLE%DESC_CMAT%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_CMAT%LLD, &
                    PAR_SUP_HANDLE%DESC_CMAT%LOC_M,PAR_SUP_HANDLE%DESC_CMAT%LOC_N)
               PAR_SUP_HANDLE%DESC_CMAT_FFM%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_CMAT_FFM%N=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_CMAT_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_CMAT_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_CMAT_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_CMAT_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_CMAT_FFM%DESC,PAR_SUP_HANDLE%DESC_CMAT_FFM%M,PAR_SUP_HANDLE%DESC_CMAT_FFM%N, &
                    PAR_SUP_HANDLE%DESC_CMAT_FFM%MB,PAR_SUP_HANDLE%DESC_CMAT_FFM%NB,PAR_SUP_HANDLE%DESC_CMAT_FFM%IRSRC,PAR_SUP_HANDLE%DESC_CMAT_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_CMAT_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_DC00%M=MMVAR1_FFM
               PAR_SUP_HANDLE%DESC_DC00%N=(MNEIB_EST1+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DC00%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DC00%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DC00%IRSRC=0
               PAR_SUP_HANDLE%DESC_DC00%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DC00%DESC,PAR_SUP_HANDLE%DESC_DC00%M,PAR_SUP_HANDLE%DESC_DC00%N, &
                    PAR_SUP_HANDLE%DESC_DC00%MB,PAR_SUP_HANDLE%DESC_DC00%NB,PAR_SUP_HANDLE%DESC_DC00%IRSRC,PAR_SUP_HANDLE%DESC_DC00%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DC00%LLD, &
                    PAR_SUP_HANDLE%DESC_DC00%LOC_M,PAR_SUP_HANDLE%DESC_DC00%LOC_N)
               PAR_SUP_HANDLE%DESC_DCLM1%M=MMVAR1_FFM
               PAR_SUP_HANDLE%DESC_DCLM1%N=(MNEIB_EST1+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DCLM1%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DCLM1%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DCLM1%IRSRC=0
               PAR_SUP_HANDLE%DESC_DCLM1%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DCLM1%DESC,PAR_SUP_HANDLE%DESC_DCLM1%M,PAR_SUP_HANDLE%DESC_DCLM1%N, &
                    PAR_SUP_HANDLE%DESC_DCLM1%MB,PAR_SUP_HANDLE%DESC_DCLM1%NB,PAR_SUP_HANDLE%DESC_DCLM1%IRSRC,PAR_SUP_HANDLE%DESC_DCLM1%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DCLM1%LLD, &
                    PAR_SUP_HANDLE%DESC_DCLM1%LOC_M,PAR_SUP_HANDLE%DESC_DCLM1%LOC_N)
               PAR_SUP_HANDLE%DESC_DCLM2%M=MMVAR2_FFM
               PAR_SUP_HANDLE%DESC_DCLM2%N=(MNEIB_EST2+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DCLM2%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DCLM2%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DCLM2%IRSRC=0
               PAR_SUP_HANDLE%DESC_DCLM2%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DCLM2%DESC,PAR_SUP_HANDLE%DESC_DCLM2%M,PAR_SUP_HANDLE%DESC_DCLM2%N, &
                    PAR_SUP_HANDLE%DESC_DCLM2%MB,PAR_SUP_HANDLE%DESC_DCLM2%NB,PAR_SUP_HANDLE%DESC_DCLM2%IRSRC,PAR_SUP_HANDLE%DESC_DCLM2%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DCLM2%LLD, &
                    PAR_SUP_HANDLE%DESC_DCLM2%LOC_M,PAR_SUP_HANDLE%DESC_DCLM2%LOC_N)
               PAR_SUP_HANDLE%DESC_DPS%M=MMVAR2_FFM
               PAR_SUP_HANDLE%DESC_DPS%N=(MNEIB_EST2+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DPS%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DPS%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DPS%IRSRC=0
               PAR_SUP_HANDLE%DESC_DPS%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DPS%DESC,PAR_SUP_HANDLE%DESC_DPS%M,PAR_SUP_HANDLE%DESC_DPS%N, &
                    PAR_SUP_HANDLE%DESC_DPS%MB,PAR_SUP_HANDLE%DESC_DPS%NB,PAR_SUP_HANDLE%DESC_DPS%IRSRC,PAR_SUP_HANDLE%DESC_DPS%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DPS%LLD, &
                    PAR_SUP_HANDLE%DESC_DPS%LOC_M,PAR_SUP_HANDLE%DESC_DPS%LOC_N)
               PAR_SUP_HANDLE%DESC_DSOAP1%M=(MNEIB_EST1+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DSOAP1%N=MB_FFM
               PAR_SUP_HANDLE%DESC_DSOAP1%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DSOAP1%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DSOAP1%IRSRC=0
               PAR_SUP_HANDLE%DESC_DSOAP1%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DSOAP1%DESC,PAR_SUP_HANDLE%DESC_DSOAP1%M,PAR_SUP_HANDLE%DESC_DSOAP1%N, &
                    PAR_SUP_HANDLE%DESC_DSOAP1%MB,PAR_SUP_HANDLE%DESC_DSOAP1%NB,PAR_SUP_HANDLE%DESC_DSOAP1%IRSRC,PAR_SUP_HANDLE%DESC_DSOAP1%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DSOAP1%LLD, &
                    PAR_SUP_HANDLE%DESC_DSOAP1%LOC_M,PAR_SUP_HANDLE%DESC_DSOAP1%LOC_N)
               PAR_SUP_HANDLE%DESC_DSOAP2%M=(MNEIB_EST2+1)*MIONS_FF
               PAR_SUP_HANDLE%DESC_DSOAP2%N=MB_FFM
               PAR_SUP_HANDLE%DESC_DSOAP2%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DSOAP2%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_DSOAP2%IRSRC=0
               PAR_SUP_HANDLE%DESC_DSOAP2%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_DSOAP2%DESC,PAR_SUP_HANDLE%DESC_DSOAP2%M,PAR_SUP_HANDLE%DESC_DSOAP2%N, &
                    PAR_SUP_HANDLE%DESC_DSOAP2%MB,PAR_SUP_HANDLE%DESC_DSOAP2%NB,PAR_SUP_HANDLE%DESC_DSOAP2%IRSRC,PAR_SUP_HANDLE%DESC_DSOAP2%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_DSOAP2%LLD, &
                    PAR_SUP_HANDLE%DESC_DSOAP2%LOC_M,PAR_SUP_HANDLE%DESC_DSOAP2%LOC_N)
#ifndef ML_LEARNING_NOT_ACTIVE
               IF(ISTART_FF.NE.2) THEN
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%M=MB_FFM
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%N=MDATA_FFM
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%MB=NBLOCK_SCALAPACK
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%NB=NBLOCK_SCALAPACK
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%IRSRC=0
                  PAR_SUP_HANDLE%DESC_FMAT_FFM%ICSRC=0
                  CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_FMAT_FFM%DESC,PAR_SUP_HANDLE%DESC_FMAT_FFM%M,PAR_SUP_HANDLE%DESC_FMAT_FFM%N, &
                       PAR_SUP_HANDLE%DESC_FMAT_FFM%MB,PAR_SUP_HANDLE%DESC_FMAT_FFM%NB,PAR_SUP_HANDLE%DESC_FMAT_FFM%IRSRC,PAR_SUP_HANDLE%DESC_FMAT_FFM%ICSRC, &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_FMAT_FFM%LLD, &
                       PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N)
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%M=MB_FFM
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%N=MDATA_NEW_FFM
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%MB=NBLOCK_SCALAPACK
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%NB=1
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%IRSRC=0
                  PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%ICSRC=0
                  CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%DESC,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%M,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%N, &
                       PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%MB,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%NB,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%IRSRC,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%ICSRC, &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%LLD, &
                       PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%LOC_M,PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%LOC_N)
               ENDIF
#endif
               PAR_SUP_HANDLE%DESC_PS%M=MMVAR2_FFM
               PAR_SUP_HANDLE%DESC_PS%N=MITYP_FF
               PAR_SUP_HANDLE%DESC_PS%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS%IRSRC=0
               PAR_SUP_HANDLE%DESC_PS%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_PS%DESC,PAR_SUP_HANDLE%DESC_PS%M,PAR_SUP_HANDLE%DESC_PS%N, &
                    PAR_SUP_HANDLE%DESC_PS%MB,PAR_SUP_HANDLE%DESC_PS%NB,PAR_SUP_HANDLE%DESC_PS%IRSRC,PAR_SUP_HANDLE%DESC_PS%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_PS%LLD, &
                    PAR_SUP_HANDLE%DESC_PS%LOC_M,PAR_SUP_HANDLE%DESC_PS%LOC_N)
               PAR_SUP_HANDLE%DESC_PS_FFM%M=MMVAR2_FFM
               PAR_SUP_HANDLE%DESC_PS_FFM%N=MB_FFM
               PAR_SUP_HANDLE%DESC_PS_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_PS_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_PS_FFM%DESC,PAR_SUP_HANDLE%DESC_PS_FFM%M,PAR_SUP_HANDLE%DESC_PS_FFM%N, &
                    PAR_SUP_HANDLE%DESC_PS_FFM%MB,PAR_SUP_HANDLE%DESC_PS_FFM%NB,PAR_SUP_HANDLE%DESC_PS_FFM%IRSRC,PAR_SUP_HANDLE%DESC_PS_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_PS_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_PS_FFM%LOC_M,PAR_SUP_HANDLE%DESC_PS_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%M=MMVAR2_FFM
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%N=MITYP_FF
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_PS_NEW_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_PS_NEW_FFM%DESC,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%M,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%N, &
                    PAR_SUP_HANDLE%DESC_PS_NEW_FFM%MB,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%NB,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%IRSRC,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_PS_NEW_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_PS_NEW_FFM%LOC_M,PAR_SUP_HANDLE%DESC_PS_NEW_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_SOAP%M=MITYP_FF
               PAR_SUP_HANDLE%DESC_SOAP%N=MB_FFM
               PAR_SUP_HANDLE%DESC_SOAP%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP%IRSRC=0
               PAR_SUP_HANDLE%DESC_SOAP%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_SOAP%DESC,PAR_SUP_HANDLE%DESC_SOAP%M,PAR_SUP_HANDLE%DESC_SOAP%N, &
                    PAR_SUP_HANDLE%DESC_SOAP%MB,PAR_SUP_HANDLE%DESC_SOAP%NB,PAR_SUP_HANDLE%DESC_SOAP%IRSRC,PAR_SUP_HANDLE%DESC_SOAP%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_SOAP%LLD, &
                    PAR_SUP_HANDLE%DESC_SOAP%LOC_M,PAR_SUP_HANDLE%DESC_SOAP%LOC_N)
               PAR_SUP_HANDLE%DESC_SOAP_NEW%M=MB_FFM
               PAR_SUP_HANDLE%DESC_SOAP_NEW%N=MB_NEW_FFM
               PAR_SUP_HANDLE%DESC_SOAP_NEW%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_NEW%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_NEW%IRSRC=0
               PAR_SUP_HANDLE%DESC_SOAP_NEW%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_SOAP_NEW%DESC,PAR_SUP_HANDLE%DESC_SOAP_NEW%M,PAR_SUP_HANDLE%DESC_SOAP_NEW%N, &
                    PAR_SUP_HANDLE%DESC_SOAP_NEW%MB,PAR_SUP_HANDLE%DESC_SOAP_NEW%NB,PAR_SUP_HANDLE%DESC_SOAP_NEW%IRSRC,PAR_SUP_HANDLE%DESC_SOAP_NEW%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_SOAP_NEW%LLD, &
                    PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_M,PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_N)
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%M=MB_NEW_FFM
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%N=MB_FFM
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%IRSRC=0
               PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%DESC,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%M,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%N, &
                    PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%MB,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%NB,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%IRSRC,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LLD, &
                    PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_M,PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_N)
               PAR_SUP_HANDLE%DESC_SOAP_FFM%M=MB_FFM
               PAR_SUP_HANDLE%DESC_SOAP_FFM%N=MB_FFM
               PAR_SUP_HANDLE%DESC_SOAP_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_FFM%NB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_SOAP_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_SOAP_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_SOAP_FFM%DESC,PAR_SUP_HANDLE%DESC_SOAP_FFM%M,PAR_SUP_HANDLE%DESC_SOAP_FFM%N, &
                    PAR_SUP_HANDLE%DESC_SOAP_FFM%MB,PAR_SUP_HANDLE%DESC_SOAP_FFM%NB,PAR_SUP_HANDLE%DESC_SOAP_FFM%IRSRC,PAR_SUP_HANDLE%DESC_SOAP_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_SOAP_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N)
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%M=MITYP_FF
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%N=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%NB=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%IRSRC=0
               PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%DESC,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%M,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%N, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%MB,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%NB,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%IRSRC,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%LLD, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%LOC_M,PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%LOC_N)
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%M=MNEIB_EST1+1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%N=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%NB=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%IRSRC=0
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%DESC,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%M,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%N, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%MB,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%NB,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%IRSRC,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%LLD, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%LOC_M,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE1%LOC_N)
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%M=MNEIB_EST2+1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%N=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%NB=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%IRSRC=0
               PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%DESC,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%M,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%N, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%MB,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%NB,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%IRSRC,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%LLD, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%LOC_M,PAR_SUP_HANDLE%DESC_VEC_LOC_FORCE2%LOC_N)
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%M=MNEIB_EST1+1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%N=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%NB=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%IRSRC=0
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%DESC,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%M,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%N, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%MB,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%NB,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%IRSRC,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%LLD, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%LOC_M,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS1%LOC_N)
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%M=MNEIB_EST2+1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%N=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%NB=1
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%IRSRC=0
               PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%DESC,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%M,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%N, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%MB,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%NB,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%IRSRC,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%LLD, &
                    PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%LOC_M,PAR_SUP_HANDLE%DESC_VEC_LOC_STRESS2%LOC_N)
               PAR_SUP_HANDLE%DESC_WMAT%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_WMAT%N=1
               PAR_SUP_HANDLE%DESC_WMAT%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_WMAT%NB=1
               PAR_SUP_HANDLE%DESC_WMAT%IRSRC=0
               PAR_SUP_HANDLE%DESC_WMAT%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_WMAT%DESC,PAR_SUP_HANDLE%DESC_WMAT%M,PAR_SUP_HANDLE%DESC_WMAT%N, &
                    PAR_SUP_HANDLE%DESC_WMAT%MB,PAR_SUP_HANDLE%DESC_WMAT%NB,PAR_SUP_HANDLE%DESC_WMAT%IRSRC,PAR_SUP_HANDLE%DESC_WMAT%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_WMAT%LLD, &
                    PAR_SUP_HANDLE%DESC_WMAT%LOC_M,PAR_SUP_HANDLE%DESC_WMAT%LOC_N)
               PAR_SUP_HANDLE%DESC_WMAT_FFM%M=MBTOT_FFM
               PAR_SUP_HANDLE%DESC_WMAT_FFM%N=1
               PAR_SUP_HANDLE%DESC_WMAT_FFM%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_WMAT_FFM%NB=1
               PAR_SUP_HANDLE%DESC_WMAT_FFM%IRSRC=0
               PAR_SUP_HANDLE%DESC_WMAT_FFM%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_WMAT_FFM%DESC,PAR_SUP_HANDLE%DESC_WMAT_FFM%M,PAR_SUP_HANDLE%DESC_WMAT_FFM%N, &
                    PAR_SUP_HANDLE%DESC_WMAT_FFM%MB,PAR_SUP_HANDLE%DESC_WMAT_FFM%NB,PAR_SUP_HANDLE%DESC_WMAT_FFM%IRSRC,PAR_SUP_HANDLE%DESC_WMAT_FFM%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_WMAT_FFM%LLD, &
                    PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_M,PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_N)
#ifndef ML_LEARNING_NOT_ACTIVE
               IF(ISTART_FF.NE.2) THEN
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%M=MDATA_FFM
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%N=1
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%MB=NBLOCK_SCALAPACK
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%NB=1
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%IRSRC=0
                  PAR_SUP_HANDLE%DESC_YMAT_FFM%ICSRC=0
                  CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_YMAT_FFM%DESC,PAR_SUP_HANDLE%DESC_YMAT_FFM%M,PAR_SUP_HANDLE%DESC_YMAT_FFM%N, &
                       PAR_SUP_HANDLE%DESC_YMAT_FFM%MB,PAR_SUP_HANDLE%DESC_YMAT_FFM%NB,PAR_SUP_HANDLE%DESC_YMAT_FFM%IRSRC,PAR_SUP_HANDLE%DESC_YMAT_FFM%ICSRC, &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                       PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL, PAR_SUP_HANDLE%DESC_YMAT_FFM%LLD, &
                       PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_N)
               ENDIF
#endif
               PAR_SUP_HANDLE%DESC_ZMAT%M=3*MIONS_FF+7
               PAR_SUP_HANDLE%DESC_ZMAT%N=1
               PAR_SUP_HANDLE%DESC_ZMAT%MB=NBLOCK_SCALAPACK
               PAR_SUP_HANDLE%DESC_ZMAT%NB=1
               PAR_SUP_HANDLE%DESC_ZMAT%IRSRC=0
               PAR_SUP_HANDLE%DESC_ZMAT%ICSRC=0
               CALL SCALAPACK_SET_DESCRIPTOR(PAR_SUP_HANDLE%DESC_ZMAT%DESC,PAR_SUP_HANDLE%DESC_ZMAT%M,PAR_SUP_HANDLE%DESC_ZMAT%N, &
                    PAR_SUP_HANDLE%DESC_ZMAT%MB,PAR_SUP_HANDLE%DESC_ZMAT%NB,PAR_SUP_HANDLE%DESC_ZMAT%IRSRC,PAR_SUP_HANDLE%DESC_ZMAT%ICSRC, &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%ICTXT,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%ME_COL,  &
                    PAR_SUP_HANDLE%CONTEXT_WORLD%NP_ROW,PAR_SUP_HANDLE%CONTEXT_WORLD%NP_COL,PAR_SUP_HANDLE%DESC_ZMAT%LLD, &
                    PAR_SUP_HANDLE%DESC_ZMAT%LOC_M,PAR_SUP_HANDLE%DESC_ZMAT%LOC_N)
#endif
            ENDIF
! Estimate the necessary memory
            MEM0%RMEM=0.0_q
            MEM0%RMEM_CMAT=0.0_q
            MEM0%RMEM_CMAT_ALL=0.0_q
            MEM0%RMEM_PS=0.0_q
            MEM0%RMEM_PS_ALL=0.0_q
            MEM0%RMEM_RST=0.0_q
            MEM0%RMEM_SOAP=0.0_q
            MEM0%RMEM_SOAP_ALL=0.0_q
            MEM0%RMEM_SVD =0.0_q
            MEM0%RMEM_WMAT_ALL=0.0_q
            MEM0%RMEM(1)=0.0_q
! For many-body interaction force field variables that are stored statically
            IF(LMLMB_FF) THEN
#ifdef scaLAPACK
               IF(W1_FFM.GT.0.0_q) THEN
#ifdef use_shmem
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR1_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! FFM%C00_ALL
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM1,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! CLM1 
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*REAL(MB_FFM,q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! SOAP_C00
                  IF (LCOUPLE_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM1,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! CLM_COUPLE_HELP1
                  ENDIF
#else
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR1_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E6_q ! FFM%C00_ALL
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM1,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! CLM1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*REAL(MB_FFM,q)*8/1.0E6_q ! SOAP_C00
                  IF (LCOUPLE_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM1,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! CLM_COUPLE_HELP1
                  ENDIF
#endif
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_C00_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_C00_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! FFM%C00
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_C00_NEW_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_C00_NEW_FFM%LOC_N,q)*REAL(MTYP_FF,q)*REAL(MCONF_NEW_FF,q)*8/1.0E6_q ! FFM%C00_NEW
               ENDIF
               IF(W2_FFM.GT.0.0_q) THEN
#ifdef use_shmem
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! FFM%PS_ALL
                  MEM0%RMEM_PS_ALL=MEM0%RMEM_PS_ALL+REAL(MMVAR2_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! FFM%PS_ALL
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM2,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! CLM2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*REAL(MB_FFM,q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! SOAP_PS
                  IF(LSIC_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! FFM%PS_SIC
                  ENDIF
                  IF (LCOUPLE_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM2,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! CLM_COUPLE_HELP2
                     IF(LSIC_FFM) THEN
                        MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! FFM%PS_SIC_COUPLE
                     ENDIF
                  ENDIF
#else
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E6_q ! FFM%PS_ALL
                  MEM0%RMEM_PS_ALL=MEM0%RMEM_PS_ALL+REAL(MMVAR2_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! FFM%PS_ALL
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM2,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! CLM2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*REAL(MB_FFM,q)*8/1.0E6_q ! SOAP_PS
                  IF(LSIC_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! FFM%PS_SIC
                  ENDIF
                  IF (LCOUPLE_FFM) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MVAR_CLM2,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! CLM_COUPLE_HELP2
                     IF(LSIC_FFM) THEN
                        MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MAX(MIONS_FF,MB_FFM),q)*8/1.0E6_q ! FFM%PS_SIC_COUPLE
                     ENDIF
                  ENDIF
#endif
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_PS_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_PS_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! PS
                  MEM0%RMEM_PS=MEM0%RMEM_PS+REAL(PAR_SUP_HANDLE%DESC_PS_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_PS_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! PS
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_PS_NEW_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_PS_NEW_FFM%LOC_N,q)*REAL(MTYP_FF,q)*REAL(MCONF_NEW_FF,q)*8/1.0E6_q ! PS_NEW
               ENDIF
#ifdef use_shmem
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! For FFM%CMAT_ALL
               MEM0%RMEM_CMAT_ALL=MEM0%RMEM_CMAT_ALL+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q/REAL(PAR_SUP_HANDLE%COMM_intra_node_world%NCPU,q) ! For FFM%CMAT_ALL
#else
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! For FFM%CMAT_ALL
               MEM0%RMEM_CMAT_ALL=MEM0%RMEM_CMAT_ALL+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! For FFM%CMAT_ALL
#endif
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+3.0_q*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%CMAT
                  MEM0%RMEM_CMAT=MEM0%RMEM_CMAT+3.0_q*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%CMAT
               ELSE
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%CMAT
                  MEM0%RMEM_CMAT=MEM0%RMEM_CMAT+REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%CMAT
               ENDIF
#ifndef ML_LEARNING_NOT_ACTIVE
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(2*PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%DMAT_FMAT
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(2*PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,q)*8/1.0E+06_q ! FFM%DMAT_YMAT
                  IF (FF%IALGO_LINREG.GT.1) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+2.0_q*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                     MEM0%RMEM_FMAT=MEM0%RMEM_FMAT+2.0_q*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                  ELSE
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                     MEM0%RMEM_FMAT=MEM0%RMEM_FMAT+REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                  ENDIF
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_NEW_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT_NEW
               ENDIF
#endif
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! SOAP
               MEM0%RMEM_SOAP=MEM0%RMEM_SOAP+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! SOAP
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+12.0_q*REAL(PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FFM%WMAT
               ELSE
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT_FFM%LOC_N,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FFM%WMAT
               ENDIF
#ifndef ML_LEARNING_NOT_ACTIVE
               IF(ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_N,q)*8/1.0E+06_q ! FFM%YMAT
               ENDIF
#endif
#else
! Non Scalapack 
               IF(W1_FFM.GT.0.0_q) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR1_FFM,q)*REAL(MB_FFM,q) *REAL(MTYP_FF,q)*8/1.0E+06_q ! C00
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR1_FFM,q)*REAL(MB_FFM,q) *REAL(MTYP_FF,q)*REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! C00_NEW
               ENDIF
               IF(W2_FFM.GT.0.0_q) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PS
                  MEM0%RMEM_PS=MEM0%RMEM_PS+REAL(MMVAR2_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PS
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MMVAR2_FFM,q)*REAL(MITYP_FF,q)*REAL(MTYP_FF,q)*REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! PS_NEW
               ENDIF
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+3.0_q*REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! FFM%CMAT
                  MEM0%RMEM_CMAT=MEM0%RMEM_CMAT+3.0_q*REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! FFM%CMAT
               ELSE
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! FFM%CMAT
                  MEM0%RMEM_CMAT=MEM0%RMEM_CMAT+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! FFM%CMAT
               ENDIF
#ifndef ML_LEARNING_NOT_ACTIVE
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! FFM%DMAT_FMAT
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! FFM%DMAT_YMAT
                  IF (FF%IALGO_LINREG.GT.1) THEN
                     MEM0%RMEM(2)=MEM0%RMEM(2)+2.0_q*REAL(MB_FFM,q)*REAL(MDATA_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                     MEM0%RMEM_FMAT=MEM0%RMEM_FMAT+2.0_q*REAL(MB_FFM,q)*REAL(MDATA_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                  ELSE
                     MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MDATA_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                     MEM0%RMEM_FMAT=MEM0%RMEM_FMAT+REAL(MB_FFM,q)*REAL(MDATA_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT
                  ENDIF
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MDATA_NEW_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FMAT_NEW
               ENDIF
#endif
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! SOAP
               MEM0%RMEM_SOAP=MEM0%RMEM_SOAP+REAL(MB_FFM,q)*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! SOAP
               IF (ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+12.0_q*REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FFM%WMAT
               ELSE
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FFM%WMAT
               ENDIF
#ifndef ML_LEARNING_NOT_ACTIVE
               IF(ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! FFM%YMAT
               ENDIF
#endif
#endif
               IF(W1_FFM.GT.0.0_q) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MSPL1_FFM,q)*5*REAL(MRB1_FFM,q)*REAL((LMAX1_FFM+1),q)*8/1.0E+06_q ! FFM%FNL1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX1_FFM+1),q)*REAL(MRB1_FFM,q)*8/1.0E+06_q ! FFM%FWIN1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB1_FFM,q)*REAL((LMAX1_FFM+1),q)/1.0E+06_q ! FFM%L_LNRB1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX1_FFM+1),q)/1.0E+06_q ! FFM%NRB1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB1_FFM,q)*REAL((LMAX1_FFM+1),q)/1.0E+06_q ! FFM%NRB_LNRB1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB1_FFM,q)*REAL((LMAX1_FFM+1),q)*8/1.0E+06_q ! FFM%QGRID1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(NR1_FFM,q)*REAL(MRB1_FFM,q)*REAL((LMAX1_FFM+1),q)*8/1.0E+06_q ! FFM%RB1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB1_FFM,q)*8/1.0E+06_q ! FFM%RC1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(NR1_FFM,q)*8/1.0E+06_q ! FFM%RG1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX1_FFM+1),q)**2*REAL(MRB1_FFM,q)*8/1.0E+06_q ! FFM%RNORM1
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB1_FFM,q)**2*8/1.0E+06_q ! FFM%USQ1
               ENDIF
               IF(W2_FFM.GT.0.0_q) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MSPL2_FFM,q)*5*REAL(MRB2_FFM,q)*REAL((LMAX2_FFM+1),q)*8/1.0E+06_q ! FFM%FNL2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX2_FFM+1),q)*REAL(MRB2_FFM,q)*8/1.0E+06_q ! FFM%FWIN2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)*REAL((LMAX2_FFM+1),q)/1.0E+06_q ! FFM%L_LNRB2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)**2*REAL((LMAX2_FFM+1),q)/1.0E+06_q ! FFM%LVAR
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX2_FFM+1),q)/1.0E+06_q ! FFM%NRB2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)*REAL((LMAX2_FFM+1),q)/1.0E+06_q ! FFM%NRB_LNRB2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)*REAL((LMAX2_FFM+1),q)*8/1.0E+06_q ! FFM%QGRID2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(NR2_FFM,q)*REAL(MRB2_FFM,q)*REAL((LMAX2_FFM+1),q)*8/1.0E+06_q ! FFM%RB2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)*8/1.0E+06_q ! FFM%RC2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(NR2_FFM,q)*8/1.0E+06_q ! FFM%RG2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((LMAX2_FFM+1),q)**2*REAL(MRB2_FFM,q)*8/1.0E+06_q ! FFM%RNORM2
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MRB2_FFM,q)**2*8/1.0E+06_q ! FFM%USQ2
               ENDIF
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MTYP_FF,q)/1.0E+06_q ! FFM%LB
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MTYP_FF,q)/1.0E+06_q ! FFM%LBHEAD
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MTYP_FF,q)/1.0E+06_q ! FFM%LNCONF
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MB_FFM,q)*REAL(MTYP_FF,q)/1.0E+06_q ! FFM%LNIONS
#ifndef ML_LEARNING_NOT_ACTIVE
               IF(ISTART_FF.NE.2) THEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*3*REAL(MCONF_FF,q)/1.0E+06_q ! FFM%LTIFOR
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MIONS_FF,q)*3*REAL(MCONF_NEW_FF,q)/1.0E+06_q ! FFM%LTIFOR_NEW
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MCONF_FF,q)/1.0E+06_q ! FFM%LTOTEN
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MCONF_NEW_FF,q)/1.0E+06_q ! FFM%LTOTEN_NEW
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MCONF_FF,q)*9/1.0E+06_q ! FFM%LTSIF
                  MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MCONF_NEW_FF,q)*9/1.0E+06_q ! FFM%LTSIF_NEW
               ENDIF
#endif
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL((MTYP_FF+1),q)/1.0E+06_q ! FFM%NB
               MEM0%RMEM(2)=MEM0%RMEM(2)+REAL(MTYP_FF,q)/1.0E+06_q ! FFM%NB_NEW
               MEM0%RMEM_WMAT_ALL=MEM0%RMEM_WMAT_ALL+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! For FFM%WMAT_ALL
            ELSE
               MEM0%RMEM(2)=0.0_q
               MEM0%RMEM_CMAT=0.0_q
               MEM0%RMEM_CMAT_ALL=0.0_q
               MEM0%RMEM_FMAT=0.0_q
               MEM0%RMEM_PS=0.0_q
               MEM0%RMEM_PS_ALL=0.0_q
               MEM0%RMEM_SOAP=0.0_q
               MEM0%RMEM_SOAP_ALL=0.0_q
               MEM0%RMEM_WMAT_ALL=0.0_q
            ENDIF
! For stored ab-initio data
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! AB%A
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! AB%B
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MTYP_FF,q)*REAL(MCONF_FF,q)/1.0E+06_q ! AB%LADD
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*REAL(MCONF_FF,q)/1.0E+06_q ! AB%LB
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*REAL(MCONF_FF,q)/1.0E+06_q ! AB%LNITYP
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MITYP_FF,q)*REAL(MTYP_FF,q)*REAL(MCONF_FF,q)/1.0E+06_q ! AB%LNIONS
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*REAL(MCONF_FF,q)/1.0E+06_q ! AB%LNTYP
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)/1.0E+06_q ! AB%LSYS
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)/1.0E+06_q ! AB%NIONS
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*REAL(MTYP_FF,q)/1.0E+06_q ! AB%NITYP
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)/1.0E+06_q ! AB%NTYP
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%OMEGA
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*3*REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%POSION
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*3*REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%TIFOR
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MIONS_FF,q)*3*REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%TIFOR_MB
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%TOTEN
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*8/1.0E+06_q ! AB%TOTEN_MB
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! AB%TSIF
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! AB%TSIF_MB
               MEM0%RMEM(3)=MEM0%RMEM(3)+REAL(MTYP_FF,q)*2/1.0E+06_q ! AB%TYPE
            ENDIF
#endif
! For new ab-initio data
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*9*8/1.0E+06_q ! ABN%A
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*9*8/1.0E+06_q ! ABN%B
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MDATA_FFM,q)/1.0E+06_q ! ABN%BE
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)/1.0E+06_q ! ABN%BEMAX
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MTYP_FF,q)/1.0E+06_q ! ABN%LADD
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MIONS_FF,q)/1.0E+06_q ! ABN%LNITYP
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MITYP_FF,q)*REAL(MTYP_FF,q)/1.0E+06_q ! ABN%LNIONS
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MIONS_FF,q)/1.0E+06_q ! ABN%LNTYP
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)/1.0E+06_q ! ABN%LSYS
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MTYP_FF,q)/1.0E+06_q ! ABN%NITYP
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! ABN%OMEGA
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MIONS_FF,q)*3*REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! ABN%POSION
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*3*REAL(MIONS_FF,q)*8/1.0E+06_q ! ABN%TIFOR
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*3*REAL(MIONS_FF,q)*8/1.0E+06_q ! ABN%TIFOR_MB
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! ABN%TOTEN
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*8/1.0E+06_q ! ABN%TOTEN_MB
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*9*8/1.0E+06_q ! ABN%TSIF
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*9*8/1.0E+06_q ! ABN%TSIF_MB
            MEM0%RMEM(4)=MEM0%RMEM(4)+REAL(MCONF_NEW_FF,q)*2/1.0E+06_q ! ABN%TYPE
! For temporary variables for sparsification (INIT_SOAP, SPARS_ICUR, CHANGE_ORDER_AB)
! In CHANGE_ORDER_AB
            RMEM_TMP=0.0_q
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! A_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! B_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MTYP_FF,q)/1.0E+06_q ! LADD_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MITYP_FF,q)*REAL(MTYP_FF,q)/1.0E+06_q ! LNIONS_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MIONS_FF,q)/1.0E+06_q ! LNITYP_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MIONS_FF,q)/1.0E+06_q ! LNTYP_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)/1.0E+06_q ! LSYS_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)/1.0E+06_q ! NIONS_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MTYP_FF,q)/1.0E+06_q ! NITYP_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)/1.0E+06_q ! NTYP_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*8/1.0E+06_q ! OMEGA_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MIONS_FF,q)*3*8/1.0E+06_q ! POSION_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*8/1.0E+06_q ! TOTEN_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*REAL(MIONS_FF,q)*3*8/1.0E+06_q ! TIFOR_TMP
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*9*8/1.0E+06_q ! TSIF_TMP
               MEM0%RMEM(5)=RMEM_TMP
! In INIT_SOAP
               RMEM_TMP=0.0_q
#ifdef scaLAPACK
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*8/1.0E+06_q ! SOAP1
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*8/1.0E+06_q ! SOAP2
#else
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP1
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP2
#endif
               MEM0%RMEM(5)=MAX(MEM0%RMEM(5),RMEM_TMP)
! In SPARS_ICUR
#ifdef scaLAPACK
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! EIGENVECTOR
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! SOAP
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! U
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! V_ALL
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! V_HIGH
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! V_LOW
               MEM0%RMEM_RST=MEM0%RMEM_RST+REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*8/1.0E+06_q ! FMAT_FFM_TRANSPOSED
               MEM0%RMEM_RST=MEM0%RMEM_RST+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*8/1.0E+06_q ! SOAP_FFM_TRANSPOSED
#else
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! U
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! V_ALL
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! V_HIGH
               MEM0%RMEM_SVD=MEM0%RMEM_SVD+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! V_LOW
               MEM0%RMEM_RST=MEM0%RMEM_RST+REAL(MDATA_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! FMAT_FFM_TRANSPOSED
               MEM0%RMEM_RST=MEM0%RMEM_RST+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP_FFM_TRANSPOSED
#endif
               RMEM_TMP=MEM0%RMEM_SVD
               RMEM_TMP=MAX(MEM0%RMEM_RST,RMEM_TMP)
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)/1.0E+06_q ! LDEL_BASIS
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)/1.0E+06_q ! LDEL_CONF
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)/1.0E+06_q ! LFLAG_BASIS
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)/1.0E+06_q ! LFLAG_CONF
               RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)/1.0E+06_q ! NB0
               RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)/1.0E+06_q ! NDEL_BASIS
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PIL_HIGH
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PIL_LOW
               RMEM_TMP=RMEM_TMP+REAL(MCONF_FF,q)*8/1.0E+06_q ! PILC
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! EIGENVALUE
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! SINGULARVALUE
               RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*8/1.0E+06_q ! WRATIO_NEW
               RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*8/1.0E+06_q ! WRATIO_OLD
               MEM0%RMEM(5)=MAX(MEM0%RMEM(5),RMEM_TMP)
            ENDIF
#endif
! For temporary variables necessary for many-body descriptors
! For subroutine INIT_PS in ff.F file
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               MEM0%RMEM(6)=0.0_q
               IF(LMLMB_FF) THEN
                  RMEM_TMP=0.0_q
                  IF(W1_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)/1.0E+06_q ! LNIONS_EST1 declared in INIT_PS
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)/1.0E+06_q ! NNEIB_EST1 declared in INIT_PS
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*3*REAL(MTYP_FF,q)*8/1.0E+06_q ! XYZ_EST1 declared INIT_PS
                  ENDIF
                  IF(W2_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)/1.0E+06_q ! LNIONS_EST2 declared in INIT_PS
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)/1.0E+06_q ! NNEIB_EST2 declared in INIT_PS
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+2),q)*3*REAL(MTYP_FF,q)*8/1.0E+06_q ! XYZ_EST2 declared INIT_PS
                  ENDIF
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! RNORM_C00 declared in INIT_PS
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! RNORM_PS declared in INIT_PS
                  RMEM_TMP=RMEM_TMP+MAX(REAL((3+MTYP_FF+4*3*8),q),REAL((LMAX2_FFM+1),q)**2*8)/1.0E+06_q ! Local arrays declared in SET_SIZE_EST_POINT and D0CLM_SOAP
                  MEM0%RMEM(7)  =MAX(MEM0%RMEM(7),RMEM_TMP)
               ENDIF
            ENDIF
#endif
! For subroutine INIT_SOAP in ff.F file
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               IF(LMLMB_FF) THEN
                  RMEM_TMP=0.0_q
#ifdef scaLAPACK
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! SOAP1 declared in INIT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_FFM%LOC_N,q)*8/1.0E+06_q ! SOAP2 declared in INIT_SOAP
#else
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP1 declared in INIT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP2 declared in INIT_SOAP
#endif
                  MEM0%RMEM(7)=MAX(MEM0%RMEM(7),RMEM_TMP)
               ENDIF
            ENDIF
#endif
! For subroutine INIT_FMAT_MB, PUT_SOAP, PUT_FMAT_MB in ff.F file
! Fur subroutine INIT_FMAT_MB
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               IF(LMLMB_FF) THEN
                  RMEM_TMP=0.0_q
#ifdef scaLAPACK
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_N,q)*2*8/1.0E+06_q ! SOAP1,2 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_VEC_LOC_ENERGY%LOC_N,q)*8/1.0E+06_q ! VEC_LOC_ENERGY declared in INIT_FMAT_MB
#else
                  RMEM_TMP=RMEM_TMP+REAL(MITYP_FF,q)*REAL(MB_FFM,q)*2*8/1.0E+06_q ! SOAP1,2 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MITYP_FF,q)*8/1.0E+06_q ! VEC_LOC_ENERGY declared in INIT_FMAT_MB
#endif
                  IF(W1_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! C00 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*4*8/1.0E+06_q ! DC00 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM1,q)*3*REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! DCLM1 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MNEIB_EST1,q)*8/1.0E+06_q ! DSOAP11 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MNEIB_EST1,q)*3*8/1.0E+06_q ! DSOAP21 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! LNIONS_EST1 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST1 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! VEC_LOC_FORCE1 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! VEC_LOC_STRESS1 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*3*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! XYZ_EST1 declared in INIT_FMAT_MB
                  ENDIF
                  IF(W2_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM2,q)*3*REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! DCLM2 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*4*8/1.0E+06_q ! DPS declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MNEIB_EST2,q)*8/1.0E+06_q ! DSOAP12 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MNEIB_EST2,q)*3*8/1.0E+06_q ! DSOAP22 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! LNIONS_EST2 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST2 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PS declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! VEC_LOC_FORCE2 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! VEC_LOC_STRESS2 declared in INIT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*3*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! XYZ_EST2 declared in INIT_FMAT_MB
                  ENDIF
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! ENERGY_HELP declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! FORCE_HELP1 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E+06_q ! FORCE_HELP2 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! SOAP1 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! SOAP2 declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*9*8/1.0E+06_q ! STRESS_HELP declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! VEC_LOC_ENERGY declared in INIT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*8/1.0E+06_q ! YLM declared in D0CLM
                  RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*3*8/1.0E+06_q ! YLM, YLMD, YLMP declared in D1CLM
                  MEM0%RMEM(7)=MAX(MEM0%RMEM(7),RMEM_TMP)
               ENDIF
            ENDIF
#endif
! For subroutine PUT_SOAP
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               IF(LMLMB_FF) THEN
                  RMEM_TMP=0.0_q
#ifdef scaLAPACK
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_N,q)*8/1.0E+06_q ! SOAP1 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW%LOC_N,q)*8/1.0E+06_q ! SOAP2 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_N,q)*8/1.0E+06_q ! SOAP3 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP_NEW_TRANSPOSED%LOC_N,q)*8/1.0E+06_q ! SOAP4 declared in PUT_SOAP
#else
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP1 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP2 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP3 declared in PUT_SOAP
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! SOAP4 declared in PUT_SOAP
#endif
                  MEM0%RMEM(7)=MAX(MEM0%RMEM(7),RMEM_TMP)
               ENDIF
            ENDIF
#endif
! For subroutine PUT_FMAT
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               IF(LMLMB_FF) THEN
                  RMEM_TMP=0.0_q
                  IF(W1_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM1,q)*3*REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! DCLM1 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! DSOAP11 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL((MNEIB_EST1+1),q)*3*8/1.0E+06_q ! DSOAP21 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! LNIONS_EST1 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST1 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! VEC_LOC_FORCE1 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E+06_q ! VEC_LOC_STRESS1 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! C00 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*4*8/1.0E+06_q ! DC00 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! RNORM_C00 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*3*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! XYZ_EST1 declared in PUT_FMAT_MB
                  ENDIF
                  IF(W2_FFM.GT.0.0_q) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM2,q)*3*REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! DCLM2 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! DSOAP12 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL((MNEIB_EST2+1),q)*3*8/1.0E+06_q ! DSOAP22 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! LNIONS_EST2 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST2 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! VEC_LOC_FORCE2 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E+06_q ! VEC_LOC_STRESS2 declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PS declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*4*8/1.0E+06_q ! DPS declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)))*8/1.0E+06_q ! RNORM_PS declared in PUT_FMAT_MB
                     RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*3*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! XYZ_EST2 declared in PUT_FMAT_MB
                  ENDIF
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*8/1.0E+06_q ! ENERGY_HELP declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*3*8/1.0E+06_q ! FORCE_HELP1 declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*8/1.0E+06_q ! FORCE_HELP2 declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)/1.0E+06_q ! LHEAD declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! SOAP1 declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)))*3*8/1.0E+06_q ! SOAP2 declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(MB_NEW_FFM,q)*REAL(MTYP_FF,q)*9*8/1.0E+06_q ! STRESS_HELP declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! VEC_LOC_ENERGY declared in PUT_FMAT_MB
                  RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*8/1.0E+06_q ! YLM declared in D0CLM
                  RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*3*8/1.0E+06_q ! YLM, YLMD, YLMP declared in D1CLM
                  MEM0%RMEM(7)=MAX(MEM0%RMEM(7),RMEM_TMP)
               ENDIF
            ENDIF
#endif
! For temporary variables necessary for many-body regression
! For subroutines GEN_FF, BLEA_MB and ZMAT
#ifndef ML_LEARNING_NOT_ACTIVE
            IF(ISTART_FF.NE.2) THEN
               MEM0%RMEM(8)=0_q
               IF(LMLMB_FF) THEN
#ifdef scaLAPACK
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_N,q)*8/1.0E+06_q ! ZMAT_FFM declared in GEN_FF
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_N,q)*8/1.0E+06_q ! CMAT0 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_FMAT_FFM%LOC_M,q)*8/1.0E+06_q ! CMAT1 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_CMAT_FFM%LOC_M,q)*8/1.0E+06_q ! EIGENVECTOR declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_N,q)*8/1.0E+06_q ! GMAT declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_N,q)*8/1.0E+06_q ! RM declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_YMAT_FFM%LOC_N,q)*8/1.0E+06_q ! VEC1 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_N,q)*8/1.0E+06_q ! VEC2 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_N,q)*8/1.0E+06_q ! VEC3 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_WMAT%LOC_N,q)*8/1.0E+06_q ! WMATALL declared in BLEA_MB
#else
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! ZMAT_FFM declared in GEN_FF
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q) *8/1.0E+06_q ! CMAT0 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MB_FFM,q)*REAL(MB_FFM,q)*8/1.0E+06_q ! CMAT1 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*REAL(MBTOT_FFM,q)*8/1.0E+06_q ! EIGENVECTOR declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! GMAT declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! RM declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MDATA_FFM,q)*8/1.0E+06_q ! VEC1 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! VEC2 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! VEC3 declared in BLEA_MB
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! WMATALL declared in BLEA_MB
#endif 
                  MEM0%RMEM(9)=MEM0%RMEM(9)+REAL(MBTOT_FFM,q)*8/1.0E+06_q ! EIGENVALUE declared in BLEA_MB
               ELSE
                  MEM0%RMEM(9)=0_q
               ENDIF
            ENDIF
#endif
! For temporary variables necessary for Coulomb prediction
            MEM0%RMEM(10) =0_q
! For temporary variables necessary for many-body prediction
            IF(LMLMB_FF) THEN
               RMEM_TMP=0.0_q
#ifdef scaLAPACK
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_BE_ENERGY%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_BE_ENERGY%LOC_N,q)*8/1.0E+06_q ! BE_ENERGY declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_BE_FORCE%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_BE_FORCE%LOC_N,q)*8/1.0E+06_q ! BE_FORCE declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_BE_STRESS%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_BE_STRESS%LOC_N,q)*8/1.0E+06_q ! BE_STRESS declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_N,q)*8/1.0E+06_q ! SOAP1_HELP2
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_SOAP%LOC_N,q)*8/1.0E+06_q ! SOAP2_HELP2
               RMEM_TMP=RMEM_TMP+REAL(PAR_SUP_HANDLE%DESC_ZMAT%LOC_M,q)*REAL(PAR_SUP_HANDLE%DESC_ZMAT%LOC_N,q)*8/1.0E+06_q ! ZMAT declared in MANYBODY
#else
               RMEM_TMP=RMEM_TMP+REAL(MBTOT_FFM,q)*8/1.0E6_q ! BE_ENERGY declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(3*MIONS_FF,q)*REAL(MBTOT_FFM,q)*8/1.0E6_q ! BE_FORCE declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MBTOT_FFM,q)*6*8/1.0E6_q ! BE_STRESS declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MITYP_FF,q)*8/1.0E6_q ! SOAP1_HELP2
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MITYP_FF,q)*8/1.0E6_q ! SOAP2_HELP2
               RMEM_TMP=RMEM_TMP+REAL((3*MIONS_FF+7),q)*8/1.0E6_q ! ZMAT declared in MANYBODY
#endif
               IF(W1_FFM.GT.0.0_q) THEN
                  RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM1,q)*REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*3*8/1.0E6_q ! DCLM1 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E6_q ! C00 declared in MANYBODY
                  IF (LCOUPLE_FFM) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E6_q ! C00_COUPLE declared in MANYBODY
                  ENDIF 
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*8/1.0E6_q ! C00_HELP declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR1_FFM,q)*REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*4*8/1.0E6_q ! DC00 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MB_FFM,q)*8/1.0E6_q ! DSOAP11 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MB_FFM,q)*3*8/1.0E6_q ! DSOAP21 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E6_q ! LNIONS_EST1 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST1 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E6_q ! VEC_LOC_FORCE1 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*8/1.0E6_q ! VEC_LOC_STRESS1 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST1+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*3*8/1.0E6_q ! XYZ_EST1 declared in MANYBODY
               ENDIF
               IF(W2_FFM.GT.0.0E0_q) THEN
                  RMEM_TMP=RMEM_TMP+REAL(MVAR_CLM2,q)*REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*3*8/1.0E6_q ! DCLM2 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*4*8/1.0E6_q ! DPS declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MB_FFM,q)*8/1.0E6_q ! DSOAP12 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MB_FFM,q)*3*8/1.0E6_q ! DSOAP22 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E6_q ! LNIONS_EST2 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)/1.0E+06_q ! NNEIB_EST2 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E+06_q ! PS declared in MANYBODY
                  IF (LCOUPLE_FFM) THEN
                     RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*REAL(MTYP_FF,q)*8/1.0E6_q ! PS_COUPLE declared in MANYBODY
                  ENDIF
                  RMEM_TMP=RMEM_TMP+REAL(MMVAR2_FFM,q)*8/1.0E6_q ! PS_HELP declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E6_q ! VEC_LOC_FORCE2 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*8/1.0E6_q ! VEC_LOC_STRESS2 declared in MANYBODY
                  RMEM_TMP=RMEM_TMP+REAL((MNEIB_EST2+1),q)*REAL(MTYP_FF,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*3*8/1.0E6_q ! XYZ_EST2 declared in MANYBODY
               ENDIF
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! SOAP1 declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E+06_q ! SOAP2 declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! SOAP1_HELP1
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*8/1.0E6_q ! SOAP2_HELP1
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*8/1.0E6_q ! ENERGY_HELP declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(CEILING(REAL(MIONS_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*3*8/1.0E6_q ! FORCE_HELP1 declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(MB_FFM,q)*REAL(MTYP_FF,q)*9*8/1.0E6_q ! STRESS_HELP declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL(CEILING(REAL(MITYP_FF,q)/REAL(PAR_SUP_HANDLE%COMM_WORLD%NCPU,q)),q)*8/1.0E6_q ! VEC_LOC_ENERGY declared in MANYBODY
               RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*8/1.0E6_q ! YLM declared in D0CLM
               RMEM_TMP=RMEM_TMP+REAL((LMAX2_FFM+1),q)**2*3*8/1.0E6_q ! YLM, YLMD, YLMP declared in D1CLM
               MEM0%RMEM(11) =MAX(MEM0%RMEM(11),RMEM_TMP)
           ELSE
              MEM0%RMEM(11)=0_q
           ENDIF
! Output to display
           CALL LOGSECTION_MEMORY(LOGF, 0, MEM0)
! Measure the final time and add them
           CALL VTIME (VPUTIM1,CPUTIM1)
           TIM%CPUTIM(1)=TIM%CPUTIM(1)+CPUTIM1-CPUTIM0
           TIM%VPUTIM(1)=TIM%VPUTIM(1)+VPUTIM1-VPUTIM0
! Stop profiling
           PROFILING_STOP ('estimate_memory')

         END SUBROUTINE ESTIMATE_MEMORY
 
      END MODULE MEMORY_USAGE
#endif
